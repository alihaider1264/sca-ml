#User function Template for python3

class Solution:
    def solveWordWrap(self, nums, k):
        #Code here
        def solve(i,rem):
            if i==n:
                return 0
            
            if dp[i][rem]!=-1:
                return dp[i][rem]
            
            if dp[i+1][k-nums[i]-1]!=-1:
                new_line = dp[i+1][k-nums[i]-1]
            else:
                new_line = solve(i+1,k-nums[i]-1)
                    
            
            if nums[i]<=rem:
                opt1 = (rem+1)*(rem+1)+new_line
                
                if dp[i+1][rem-nums[i]-1]!=-1:
                    same_line = dp[i+1][rem-nums[i]-1]
                else:
                    same_line = solve(i+1,rem-nums[i]-1)
                    
                opt2 = same_line
                ans = min(opt1,opt2)
                
            else:
                        
                ans = (rem+1)*(rem+1)+new_line      
            
            dp[i][rem]=ans
            return dp[i][rem]
                
            
        
        n = len(nums)
        dp = [[-1]*(k+1) for i in range(n+1)]
        return solve(0,k)
