from queue import PriorityQueue
import math
class Solution:
    
    #Function to return the minimum cost to react at bottom
    #right cell from top left cell.
    
    def minimumCostPath(self, grid):
        #Code here
        n = len(grid)
        m = len(grid[0])
        visited = [[False for j in range(m)]for i in range(n)]
        gsum = [[math.inf for j in range(m)]for i in range(n)]
        gsum[0][0] = grid[0][0]
        q = PriorityQueue()
        q.put((grid[0][0],(0,0)))  #(cost,(i,j))
        direc = [(-1,0),(1,0),(0,-1),(0,1)]
        while not q.empty():
            cost,idx = q.get()
            i,j = idx
            if not visited[i][j]:
                visited[i][j] = True
                for di in direc:
                    x = i+di[0]
                    y = j+di[1]
                    if x>=0 and x<n and y>=0 and y<m and not visited[x][y]:
                        if cost+grid[x][y]<gsum[x][y]:
                            gsum[x][y] = cost+grid[x][y]
                            q.put((gsum[x][y],(x,y)))
                            if x==n-1 and y==m-1:
                                return gsum[x][y]
        
        return gsum[n-1][m-1]
                        
                
        
        
