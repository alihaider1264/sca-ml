#User function Template for python3
import bisect
class Solution:
    def helper(self, lst):
        res = []
        if len(lst) > 0:
            res.append(lst[0])
        for i in range(1, len(lst)):
            if lst[i] > res[-1]:
                res.append(lst[i])
            else:
                j = bisect.bisect_left(res, lst[i], 0, len(res))
                res[j] = lst[i]
        return len(res)
    
    def minInsAndDel(self, A, B, N, M):
        # code here
        def binarySearch(target):
            low = 0
            high = M-1
            mid = 0
            while low <= high:
                mid = (high + low) // 2
                if B[mid] == target:
                    return True
                elif B[mid] < target:
                    low = mid + 1
                else:
                    high = mid - 1
            return False
        
        temp = []
        for i in range(N):
            if binarySearch(A[i]):
                temp.append(A[i])
        return (N+M-(2*self.helper(temp)))